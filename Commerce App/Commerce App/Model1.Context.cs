//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Commerce_App
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class commercial_systemEntities : DbContext
    {
        public commercial_systemEntities()
            : base("name=commercial_systemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Item_MesurementValues> Item_MesurementValues { get; set; }
        public virtual DbSet<Item_Store> Item_Store { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Items_PayOrder> Items_PayOrder { get; set; }
        public virtual DbSet<Items_PurchaseOrder> Items_PurchaseOrder { get; set; }
        public virtual DbSet<Pay_Order> Pay_Order { get; set; }
        public virtual DbSet<Purchase_Order> Purchase_Order { get; set; }
        public virtual DbSet<Store> Stores { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual ObjectResult<R1_Result> R1(string store, Nullable<System.DateTime> date)
        {
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<R1_Result>("R1", storeParameter, dateParameter);
        }
    
        public virtual ObjectResult<R2_Result> R2(string itemName, Nullable<System.DateTime> date)
        {
            var itemNameParameter = itemName != null ?
                new ObjectParameter("itemName", itemName) :
                new ObjectParameter("itemName", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<R2_Result>("R2", itemNameParameter, dateParameter);
        }
    
        public virtual ObjectResult<R3_Result> R3(string store, Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<R3_Result>("R3", storeParameter, date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<R4_Result> R4(Nullable<int> time_interval_in_days)
        {
            var time_interval_in_daysParameter = time_interval_in_days.HasValue ?
                new ObjectParameter("time_interval_in_days", time_interval_in_days) :
                new ObjectParameter("time_interval_in_days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<R4_Result>("R4", time_interval_in_daysParameter);
        }
    
        public virtual ObjectResult<R5_Result> R5(Nullable<int> time_interval_in_days)
        {
            var time_interval_in_daysParameter = time_interval_in_days.HasValue ?
                new ObjectParameter("time_interval_in_days", time_interval_in_days) :
                new ObjectParameter("time_interval_in_days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<R5_Result>("R5", time_interval_in_daysParameter);
        }
    
        public virtual ObjectResult<R2Both_Result> R2Both(string itemName, string store, Nullable<System.DateTime> date)
        {
            var itemNameParameter = itemName != null ?
                new ObjectParameter("itemName", itemName) :
                new ObjectParameter("itemName", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<R2Both_Result>("R2Both", itemNameParameter, storeParameter, dateParameter);
        }
    
        public virtual ObjectResult<R2Date_Result> R2Date(string itemName, Nullable<System.DateTime> date)
        {
            var itemNameParameter = itemName != null ?
                new ObjectParameter("itemName", itemName) :
                new ObjectParameter("itemName", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<R2Date_Result>("R2Date", itemNameParameter, dateParameter);
        }
    
        public virtual ObjectResult<R2Store_Result> R2Store(string itemName, string store)
        {
            var itemNameParameter = itemName != null ?
                new ObjectParameter("itemName", itemName) :
                new ObjectParameter("itemName", typeof(string));
    
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<R2Store_Result>("R2Store", itemNameParameter, storeParameter);
        }
    
        public virtual ObjectResult<R3New_Result> R3New(string store, Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var storeParameter = store != null ?
                new ObjectParameter("store", store) :
                new ObjectParameter("store", typeof(string));
    
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<R3New_Result>("R3New", storeParameter, date1Parameter, date2Parameter);
        }
    }
}
